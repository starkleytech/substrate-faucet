{{- if .Values.knativeDeploy }}
{{- else }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
{{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
{{- if .Values.hpa.enabled }}
{{- else }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}
{{- if .Values.podsLabels }}
{{ toYaml .Values.podsLabels | indent 6 }}
{{- end }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
{{- if .Values.serviceAccount.enabled }}
{{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
{{- else }}
      serviceAccountName: {{ template "fullname" . }}
{{- end }}
{{- end }}
      containers:
      - name: redis
        image: redis:5.0.4
        ports:
        - containerPort: 6379
        resources:
          requests: {}   
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 20
                
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ .Values.envconfigmap.name }}
        env:
        - name: VERSION
          value: {{ .Chart.Version }}
        - name: DISCORD_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.botSecrets.name }}
              key: DISCORD_BOT_TOKEN
              optional: false
        - name: FAUCET_MNEMONIC
          valueFrom:
            secretKeyRef:
              name: {{ .Values.botSecrets.name }}
              key: FAUCET_MNEMONIC
              optional: false
        #- name: NODE_RPC
        #  value: "{{ .Values.botConfig.NODE_RPC }}"
        - name: TOKENS_TO_SEND
          value: "{{ .Values.botConfig.TOKENS_TO_SEND }}"
        - name: TOKEN_SYMBOL
          value: "{{ .Values.botConfig.TOKEN_SYMBOL }}"
        - name: ISSUE_INTERVAL
          value: "{{ .Values.botConfig.ISSUE_INTERVAL }}"
        - name: REDIS_IP
          value: "{{ .Values.botConfig.REDIS_IP }}"
        - name: REDIS_PORT
          value: "{{ .Values.botConfig.REDIS_PORT }}"
        - name: PROMETHEUS_PORT
          value: "{{ .Values.botConfig.PROMETHEUS_PORT }}"
        ports:
        - name: http
          containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.probePath | default .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.probePath | default .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.resources | indent 12 }}          
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      imagePullSecrets:
{{- range $pval := .Values.jx.imagePullSecrets }}
      - name: {{ quote $pval }}
{{- end }}
{{- end }}
